# Slice Dashboard

This repository contains a Slice Dashboard application with a React frontend and a Flask backend. Follow the instructions below to set up and run the application locally.

---

## Table of Contents

1. [Prerequisites](#prerequisites)
2. [Project Structure](#project-structure)
3. [Backend Setup (Flask)](#backend-setup-flask)

   * [Create and Activate Virtual Environment](#create-and-activate-virtual-environment)
   * [Install Dependencies](#install-dependencies)
   * [Environment Variables](#environment-variables)
   * [Run the Backend](#run-the-backend)
4. [Frontend Setup (React)](#frontend-setup-react)

   * [Install Dependencies](#install-dependencies-1)
   * [Run the Frontend](#run-the-frontend)
5. [Running Both Services](#running-both-services)
6. [Troubleshooting](#troubleshooting)

---

## Prerequisites

* **Node.js** and **npm** (v14+ recommended)
* **Python** (version 3.8+)
* **Git** (to clone the repository)
* **MongoDB** (local or cloud instance)

---

## Project Structure

```
root/
├── frontend/      # React application
│   ├── public/
│   ├── src/
│   ├── package.json
│   └── ...
├── backend/       # Flask API
│   ├── venv/      # Virtual environment (ignored by git)
│   ├── app.py     # Entry point for Flask
│   ├── requirements.txt
│   ├── .env       # Environment variables: MONGO_URI, DB_NAME
│   └── ...
└── README.md      # This file
```

---

## Backend Setup (Flask)

### 1. Create and Activate Virtual Environment

```bash
# Navigate to backend folder
cd backend

# Create virtual environment
python3 -m venv venv

# Activate virtual environment (Linux / macOS)
source venv/bin/activate

# Activate virtual environment (Windows)
venv\\Scripts\\activate
```

### 2. Install Dependencies

```bash
pip install --upgrade pip
pip install -r requirements.txt
```

### 3. Environment Variables

Create a `.env` file in the **backend** folder with the following content:

```
MONGO_URI=<your-mongodb-connection-string>
DB_NAME=<your-database-name>
```

> **Note:** The `.env` file must reside in the `backend/` directory and should **not** be committed to version control.

### 4. Run the Backend

```bash
# Ensure the virtual environment is active
env/bin/activate  # or venv\\Scripts\\activate

# Start Flask server
export FLASK_APP=app.py       # Linux / macOS
set FLASK_APP=app.py          # Windows
export FLASK_ENV=development  # Linux / macOS (optional)
set FLASK_ENV=development     # Windows    (optional)

flask run --host=0.0.0.0 --port=5000
```

The backend API will be available at `http://localhost:5000/`.

---

## Frontend Setup (React)

### 1. Install Dependencies

```bash
# Navigate to frontend folder
cd ../frontend

# Install npm packages
npm install
```

### 2. Run the Frontend

```bash
# Start React development server
npm start
```

The React app will open in your default browser at `http://localhost:3000/`.

---

## Running Both Services

Open two terminal windows or tabs:

* **Terminal 1 (Backend)**:

  ```bash
  cd backend
  source venv/bin/activate  # or venv\\Scripts\\activate
  flask run
  ```

* **Terminal 2 (Frontend)**:

  ```bash
  cd frontend
  npm start
  ```

Once both are running, navigate to `http://localhost:3000/` to view the Slice Dashboard.

---

## Troubleshooting

* **Port conflicts**:

  * If **5000** or **3000** ports are in use, specify a different port:

    * Flask: `flask run --port=5001`
    * React: `PORT=3001 npm start`

* **Virtual environment issues**:

  * Ensure you’re using the correct Python version.
  * Re-create the `venv` if dependencies fail to install:

    ```bash
    rm -rf venv
    python3 -m venv venv
    source venv/bin/activate
    pip install -r requirements.txt
    ```

* **MongoDB connection errors**:

  * Double-check `MONGO_URI` and `DB_NAME` in `.env`.
  * Ensure your IP is whitelisted if using MongoDB Atlas.

---

Happy coding!
